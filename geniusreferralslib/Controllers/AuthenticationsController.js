/**
  * GeniusReferralsLib
  *
  * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
  */

;(function (angular) {
'use strict';

angular.module('GeniusReferralsLib')
    .factory('AuthenticationsController', ['$q', 'Configuration', 'HttpClient', 'APIHelper',
        function($q, Configuration, HttpClient, APIHelper) {
            return {
                /**
                 * Allow clients to test authentication on Genius Referrals platform.
                 *
                 * @return {promise<mixed>}
                 */
                getAuthentication: function () {

                    //Create promise to return
                    var _deffered = $q.defer();
                    
                    //prepare query string for API call
                    var _baseUri = Configuration.BASEURI
                    var _queryBuilder = _baseUri + "/test-authentication";
                    
                    //validate and preprocess url
                    var _queryUrl = APIHelper.cleanUrl(_queryBuilder);
                    
                    // prepare headers
                    var _headers = {
                        "accept": "application/json",
                        "Content-Type": Configuration.contentType,
                        "X-Auth-Token": Configuration.xAuthToken
                    };

                    // prepare and invoke the API call request to fetch the response
                    var _config = {
                        method: "GET",
                        queryUrl: _queryUrl,
                        headers: _headers,
                    };
                    
                    var _response = HttpClient(_config);
                    
                    //process response
                    _response.then(function (_result) {
                        var _strResult = JSON.stringify(_result.body);
                        _result.body = JSON.parse(_strResult);
                        _deffered.resolve(_result);
                    }, function(_result){
                        // Error handling for custom HTTP status codes
                        if (_result.code == 401) {
                            _deffered.reject(APIHelper.appendContext({errorMessage: "You are not authenticated", errorCode: 401, errorResponse: _result.message}, _result.getContext()));
                        } else if (_result.code == 403) {
                            _deffered.reject(APIHelper.appendContext({errorMessage: "User not authorized to perform the operation", errorCode: 403, errorResponse: _result.message}, _result.getContext()));
                        } else if (_result.code == 404) {
                            _deffered.reject(APIHelper.appendContext({errorMessage: "Resource not found", errorCode: 404, errorResponse: _result.message}, _result.getContext()));
                        } else {
                            _deffered.reject(APIHelper.appendContext({errorMessage:"HTTP Response Not OK", errorCode: _result.code, errorResponse: _result.message}, _result.getContext()));
                        }
                    });
                    
                    return _deffered.promise;
                }
            }
        }
    ]);

}(angular));
