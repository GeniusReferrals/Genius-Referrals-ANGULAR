/**
 * GeniusReferralsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of AdvocatePatchForm
 *
 * @constructor
 */
angular.module('GeniusReferralsLib')
    .factory('AdvocatePatchForm', ['BaseModel',
        function (BaseModel) {
            var AdvocatePatchForm = function (obj) {
                if (!obj) {
                    this.name = null;
                    this.lastname = null;
                    this.email = null;
                    this.payoutThreshold = null;
                    this.claimedBalance = null;
                    this.unclaimedBalance = null;
                    this.currencyCode = null;
                    this.avatarUrl = null;
                    this.metadata = null;
                    this.canRefer = null;
                    this.token = null;
        
                    // Append to variable dictionary
                    this._variableDict['payoutThreshold'] = 'payout_threshold';
                    this._variableDict['claimedBalance'] = 'claimed_balance';
                    this._variableDict['unclaimedBalance'] = 'unclaimed_balance';
                    this._variableDict['currencyCode'] = 'currency_code';
                    this._variableDict['avatarUrl'] = 'avatar_url';
                    this._variableDict['canRefer'] = 'can_refer';
                } else {
                    this.name = obj.name;
                    this.lastname = obj.lastname;
                    this.email = obj.email;
                    this.payoutThreshold = obj.payout_threshold;
                    this.claimedBalance = obj.claimed_balance;
                    this.unclaimedBalance = obj.unclaimed_balance;
                    this.currencyCode = obj.currency_code;
                    this.avatarUrl = obj.avatar_url;
                    this.metadata = obj.metadata;
                    this.canRefer = obj.can_refer;
                    this.token = obj.token;
            
                    // Append to variable dictionary
                    this._variableDict['payoutThreshold'] = 'payout_threshold';
                    this._variableDict['claimedBalance'] = 'claimed_balance';
                    this._variableDict['unclaimedBalance'] = 'unclaimed_balance';
                    this._variableDict['currencyCode'] = 'currency_code';
                    this._variableDict['avatarUrl'] = 'avatar_url';
                    this._variableDict['canRefer'] = 'can_refer';
                }
            }
    
            AdvocatePatchForm.prototype = new BaseModel();
            AdvocatePatchForm.prototype.constructor = AdvocatePatchForm;
        
            /**
             * The advocate's name
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getName = function () {
                return this.name;
            };
        
            /**
             * Setter for Name
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setName = function (value) {
                this.name = value;
            };
        
            /**
             * The advocate's last name
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getLastname = function () {
                return this.lastname;
            };
        
            /**
             * Setter for Lastname
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setLastname = function (value) {
                this.lastname = value;
            };
        
            /**
             * The advocate's email
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getEmail = function () {
                return this.email;
            };
        
            /**
             * Setter for Email
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setEmail = function (value) {
                this.email = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {int|null}
             */
            AdvocatePatchForm.prototype.getPayoutThreshold = function () {
                return this.payoutThreshold;
            };
        
            /**
             * Setter for PayoutThreshold
             * 
             * @param {int|null} value 
             */
            AdvocatePatchForm.prototype.setPayoutThreshold = function (value) {
                this.payoutThreshold = value;
            };
        
            /**
             * The total amount of bonuses that the advocate must generate before being able to create a bonus redemption request.
             *
             * @return {int|null}
             */
            AdvocatePatchForm.prototype.getClaimedBalance = function () {
                return this.claimedBalance;
            };
        
            /**
             * Setter for ClaimedBalance
             * 
             * @param {int|null} value 
             */
            AdvocatePatchForm.prototype.setClaimedBalance = function (value) {
                this.claimedBalance = value;
            };
        
            /**
             * The unclaimed balance
             *
             * @return {int|null}
             */
            AdvocatePatchForm.prototype.getUnclaimedBalance = function () {
                return this.unclaimedBalance;
            };
        
            /**
             * Setter for UnclaimedBalance
             * 
             * @param {int|null} value 
             */
            AdvocatePatchForm.prototype.setUnclaimedBalance = function (value) {
                this.unclaimedBalance = value;
            };
        
            /**
             * The currency code
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getCurrencyCode = function () {
                return this.currencyCode;
            };
        
            /**
             * Setter for CurrencyCode
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setCurrencyCode = function (value) {
                this.currencyCode = value;
            };
        
            /**
             * The advocate's avatar URL
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getAvatarUrl = function () {
                return this.avatarUrl;
            };
        
            /**
             * Setter for AvatarUrl
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setAvatarUrl = function (value) {
                this.avatarUrl = value;
            };
        
            /**
             * Useful to store extra information about the advocate. e.g, the phone number, address, etc.
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getMetadata = function () {
                return this.metadata;
            };
        
            /**
             * Setter for Metadata
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setMetadata = function (value) {
                this.metadata = value;
            };
        
            /**
             * Whether or not the advocate is allowed to refer services/products (Useful when using the Full Widget template).
             *
             * @return {bool|null}
             */
            AdvocatePatchForm.prototype.getCanRefer = function () {
                return this.canRefer;
            };
        
            /**
             * Setter for CanRefer
             * 
             * @param {bool|null} value 
             */
            AdvocatePatchForm.prototype.setCanRefer = function (value) {
                this.canRefer = value;
            };
        
            /**
             * The advocate's token
             *
             * @return {string|null}
             */
            AdvocatePatchForm.prototype.getToken = function () {
                return this.token;
            };
        
            /**
             * Setter for Token
             * 
             * @param {string|null} value 
             */
            AdvocatePatchForm.prototype.setToken = function (value) {
                this.token = value;
            };
        
            return AdvocatePatchForm;
        }
    ]);

}(angular));
