/**
 * GeniusReferralsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Advocate
 *
 * @constructor
 */
angular.module('GeniusReferralsLib')
    .factory('Advocate', ['BaseModel',
        function (BaseModel) {
            var Advocate = function (obj) {
                if (!obj) {
                    this.name = null;
                    this.lastname = null;
                    this.email = null;
                    this.payoutThreshold = null;
                    this.avatarUrl = null;
                    this.metadata = null;
                    this.canRefer  = true;
        
                    // Append to variable dictionary
                    this._variableDict['payoutThreshold'] = 'payout_threshold';
                    this._variableDict['avatarUrl'] = 'avatar_url';
                    this._variableDict['canRefer'] = 'can_refer';
                } else {
                    this.name = obj.name;
                    this.lastname = obj.lastname;
                    this.email = obj.email;
                    this.payoutThreshold = obj.payout_threshold;
                    this.avatarUrl = obj.avatar_url;
                    this.metadata = obj.metadata;
                    this.canRefer = obj.can_refer;
            
                    // Append to variable dictionary
                    this._variableDict['payoutThreshold'] = 'payout_threshold';
                    this._variableDict['avatarUrl'] = 'avatar_url';
                    this._variableDict['canRefer'] = 'can_refer';
                }
            }
    
            Advocate.prototype = new BaseModel();
            Advocate.prototype.constructor = Advocate;
        
            /**
             * The advocate's name
             *
             * @return {string}
             */
            Advocate.prototype.getName = function () {
                return this.name;
            };
        
            /**
             * Setter for Name
             * 
             * @param {string} value 
             */
            Advocate.prototype.setName = function (value) {
                this.name = value;
            };
        
            /**
             * The advocate's last name
             *
             * @return {string}
             */
            Advocate.prototype.getLastname = function () {
                return this.lastname;
            };
        
            /**
             * Setter for Lastname
             * 
             * @param {string} value 
             */
            Advocate.prototype.setLastname = function (value) {
                this.lastname = value;
            };
        
            /**
             * The advocate's email
             *
             * @return {string}
             */
            Advocate.prototype.getEmail = function () {
                return this.email;
            };
        
            /**
             * Setter for Email
             * 
             * @param {string} value 
             */
            Advocate.prototype.setEmail = function (value) {
                this.email = value;
            };
        
            /**
             * The total amount of bonuses that the advocate must generate before being able to create a bonus redemption request.
             *
             * @return {int}
             */
            Advocate.prototype.getPayoutThreshold = function () {
                return this.payoutThreshold;
            };
        
            /**
             * Setter for PayoutThreshold
             * 
             * @param {int} value 
             */
            Advocate.prototype.setPayoutThreshold = function (value) {
                this.payoutThreshold = value;
            };
        
            /**
             * The advocate's avatar URL
             *
             * @return {string|null}
             */
            Advocate.prototype.getAvatarUrl = function () {
                return this.avatarUrl;
            };
        
            /**
             * Setter for AvatarUrl
             * 
             * @param {string|null} value 
             */
            Advocate.prototype.setAvatarUrl = function (value) {
                this.avatarUrl = value;
            };
        
            /**
             * Useful to store extra information about the advocate. e.g, the phone number, address, etc.
             *
             * @return {string|null}
             */
            Advocate.prototype.getMetadata = function () {
                return this.metadata;
            };
        
            /**
             * Setter for Metadata
             * 
             * @param {string|null} value 
             */
            Advocate.prototype.setMetadata = function (value) {
                this.metadata = value;
            };
        
            /**
             * Whether or not the advocate is allowed to refer services/products (Useful when using the Full Widget template).
             *
             * @return {bool|null}
             */
            Advocate.prototype.getCanRefer = function () {
                return this.canRefer;
            };
        
            /**
             * Setter for CanRefer
             * 
             * @param {bool|null} value 
             */
            Advocate.prototype.setCanRefer = function (value) {
                this.canRefer = value;
            };
        
            return Advocate;
        }
    ]);

}(angular));
